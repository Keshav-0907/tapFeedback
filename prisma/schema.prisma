// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        String    @id @default(cuid())
  name      String?
  email     String?   @unique
  password  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Project   Project[]
}

model Project {
  id         String   @id @default(cuid())
  title      String?
  url        String?
  screenshot String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  Popup      Popup[]
}

model Popup {
  id                 String     @id @default(cuid())
  impressionCount    Int        @default(0)
  projectId          String
  title              String?
  titleSize          String?
  titleColor         String?
  description        String?
  descriptionSize    String?
  descriptionColor   String?
  backgroundColor    String?
  textColor          String?
  borderColor        String?
  borderWidth        String?
  borderRadius       String?
  feedbackType       String?
  showTextInput      Boolean?
  ctaText            String?
  ctaTextColor       String?
  ctaBackgroundColor String?
  position           String?
  entryAnimation     String?
  exitAnimation      String?
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  project            Project    @relation(fields: [projectId], references: [id])
  Feedback           Feedback[]
}

model Feedback {
  id        String   @id @default(cuid())
  popupId   String
  rating    Int
  feedback  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Popup     Popup    @relation(fields: [popupId], references: [id])
}
